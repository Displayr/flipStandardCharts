% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardchart.R
\name{Chart}
\alias{Chart}
\title{Generates an interactive chart based on the plotly library.}
\usage{
Chart(y, type = "Column", transpose = FALSE, title = "",
  title.font.family = NULL, title.font.color = NULL, title.font.size = 16,
  colors = NULL, colors.reverse = FALSE, opacity = NULL,
  background.fill.color = rgb(255, 255, 255, maxColorValue = 255),
  background.fill.opacity = 1, charting.area.fill.color = rgb(255, 255, 255,
  maxColorValue = 255), charting.area.fill.opacity = 1, legend.show = TRUE,
  legend.fill = rgb(255, 255, 255, maxColorValue = 255),
  legend.border.color = rgb(44, 44, 44, maxColorValue = 255),
  legend.border.line.width = 0, legend.font.color = NULL,
  legend.font.family = NULL, legend.font.size = 10,
  legend.position = "right", legend.ascending = TRUE, margin.top = NULL,
  margin.bottom = NULL, margin.left = NULL, margin.right = NULL,
  margin.inner.pad = NULL, y.title = "", y.title.font.color = NULL,
  y.title.font.family = NULL, y.title.font.size = 12, y.line.width = 0,
  y.line.color = rgb(0, 0, 0, maxColorValue = 255), y.tick.marks = "",
  y.tick.mark.length = 5, y.bounds.minimum = NULL,
  y.bounds.maximum = NULL, y.tick.distance = NULL, y.zero = TRUE,
  y.zero.line.width = 0, y.zero.line.color = rgb(44, 44, 44, maxColorValue =
  255), y.position = "left", y.data.reversed = FALSE, y.grid.width = 1,
  y.grid.color = rgb(225, 225, 225, maxColorValue = 255),
  y.tick.show = TRUE, y.tick.suffix = "", y.tick.prefix = "",
  y.tick.decimals = NULL, y.tick.format.manual = "",
  y.hovertext.decimals = NULL, y.hovertext.format.manual = "",
  y.tick.angle = NULL, y.tick.font.color = NULL,
  y.tick.font.family = NULL, y.tick.font.size = 10, x.title = "",
  x.title.font.color = NULL, x.title.font.family = NULL,
  x.title.font.size = 12, x.line.width = 0, x.line.color = rgb(0, 0, 0,
  maxColorValue = 255), x.tick.marks = "", x.tick.mark.length = 5,
  x.bounds.minimum = NULL, x.bounds.maximum = NULL,
  x.tick.distance = NULL, x.zero.line.width = 0,
  x.zero.line.color = rgb(44, 44, 44, maxColorValue = 255),
  x.position = "bottom", x.data.reversed = FALSE, x.grid.width = 1,
  x.grid.color = rgb(225, 225, 225, maxColorValue = 255),
  x.tick.show = TRUE, x.tick.suffix = "", x.tick.prefix = "",
  x.tick.decimals = NULL, x.tick.format.manual = "",
  x.hovertext.decimals = NULL, x.hovertext.format.manual = "",
  x.tick.angle = NULL, x.tick.font.color = NULL,
  x.tick.font.family = NULL, x.tick.font.size = 10,
  x.tick.label.autoformat = TRUE, series.marker.show = NULL,
  series.marker.colors = NULL, series.marker.colors.reverse = FALSE,
  series.marker.opacity = 1, series.marker.size = 6,
  series.marker.border.width = 1, series.marker.border.colors = NULL,
  series.marker.border.colors.reverse = FALSE,
  series.marker.border.opacity = 1, series.line.width = NULL,
  series.line.colors = NULL, series.line.colors.reverse = FALSE,
  series.line.opacity = 1, tooltip.show = TRUE, modebar.show = FALSE,
  global.font.family = "Arial", global.font.color = rgb(44, 44, 44,
  maxColorValue = 255), rows.to.ignore = "Total, NET, SUM",
  cols.to.ignore = "Total, NET, SUM", bar.gap = 0.15,
  data.label.show = NULL, data.label.font.family = NULL,
  data.label.font.size = 10, data.label.font.color = NULL,
  data.label.decimals = 2, data.label.prefix = "", data.label.suffix = "",
  data.label.threshold = NULL, data.label.position = "top middle",
  pie.order = "initial", pie.groups.order = "initial",
  pie.subslice.colors = NULL, pie.subslice.colors.reverse = FALSE,
  pie.subslice.colors.repeat = TRUE, pie.border.color = rgb(255, 255, 255,
  maxColorValue = 255), pie.inner.radius = 70, pie.show.percentages = FALSE,
  z.title = "", scatter.group.indices = "", scatter.group.labels = "",
  us.date.format = NULL)
}
\arguments{
\item{y}{A table, matrix, vector or data frame.}

\item{type}{Character; type of chart. Can be "Area", "Stacked Area",
or "100\% Stacked Area".}

\item{transpose}{Logical; should the final output be transposed?}

\item{title}{Character; chart title.}

\item{title.font.family}{Character; title font family. Can be "Arial Black",
"Arial", "Comic Sans MS", "Courier New", "Georgia", "Impact",
"Lucida Console", "Lucida Sans Unicode", "Marlett", "Symbol", "Tahoma",
"Times New Roman", "Trebuchet MS", "Verdana", "Webdings"}

\item{title.font.color}{Title font color as a named color in character
format (e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, maxColorValue = 255)).}

\item{title.font.size}{Title font size; default = 10.}

\item{colors}{Character; a vector containing one or more named
colors from grDevices OR one or more specified hex value colors OR a single
named palette from grDevices, RColorBrewer, colorspace, or colorRamps.}

\item{colors.reverse}{Logical; if the order of the colors should be reversed.}

\item{opacity}{Opacity of area fill colors as an alpha value
(0 to 1).}

\item{background.fill.color}{Background color in character format
(e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, maxColorValue = 255)).}

\item{background.fill.opacity}{Background opacity as an alpha value
(0 to 1).}

\item{charting.area.fill.color}{Charting area background color as
a named color in character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, maxColorValue = 255)).}

\item{charting.area.fill.opacity}{Charting area background
opacity as an alpha value (0 to 1).}

\item{legend.show}{Logical; show the legend.}

\item{legend.fill}{Legend fill color as a named color in character format
(e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, maxColorValue = 255)).}

\item{legend.border.color}{Legend border color as a named color in character
format (e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, maxColorValue = 255)).}

\item{legend.border.line.width}{Width in pixels of the border
around the legend.  0 = no border.}

\item{legend.font.color}{Legend font color as a named color in character
format (e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, maxColorValue = 255)).}

\item{legend.font.family}{Character; legend font family.}

\item{legend.font.size}{Legend font size.}

\item{legend.position}{Where the legend will be placed; can be "left" or
"right" of plot.}

\item{legend.ascending}{Logical; TRUE for ascending, FALSE for descending}

\item{margin.top}{Margin between plot area and the top of the
graphic in pixels}

\item{margin.bottom}{Margin between plot area and the bottom of the
graphic in pixels}

\item{margin.left}{Margin between plot area and the left of the
graphic in pixels}

\item{margin.right}{Margin between plot area and the right of the
graphic in pixels}

\item{margin.inner.pad}{Padding in pixels between plot proper
and axis lines}

\item{y.title}{Character, y-axis title; defaults to chart input values;
to turn off set to "FALSE".}

\item{y.title.font.color}{y-axis title font color as a named color in
character format (e.g. "black") or an rgb value (e.g. rgb(0, 0, 0,
max = 255)).}

\item{y.title.font.family}{Character; y-axis title font family}

\item{y.title.font.size}{y-axis title font size}

\item{y.line.width}{y-axis line in pixels, 0 = no line}

\item{y.line.color}{y-axis line color as a named color in character format
(e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, maxColorValue = 255)).}

\item{y.tick.marks}{Character; whether and where to show tick marks on the
y axis.  Can be "outside", "inside", "none"}

\item{y.tick.mark.length}{Length of tick marks in pixels.}

\item{y.bounds.minimum}{Minimum of range for plotting;
NULL = no manual range set.  Must be less than y.bounds.maximum}

\item{y.bounds.maximum}{Maximum of range for
plotting; NULL = no manual range set.  Must be greater than y.bounds.minimum}

\item{y.tick.distance}{Tick mark distance.}

\item{y.zero}{Whether the y-axis should include zero.}

\item{y.zero.line.width}{Width in pixels of zero line; 0 = no zero line
shown}

\item{y.zero.line.color}{Color of horizontal zero line as a named
color in character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, maxColorValue = 255)).}

\item{y.position}{Character; set y-axis position; can be "left" or "right"}

\item{y.data.reversed}{Logical; whether to reverse y-axis or not}

\item{y.grid.width}{Width of y-grid lines in pixels; 0 = no line}

\item{y.grid.color}{Color of y-grid lines as a named color in character
format (e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, maxColorValue = 255)).}

\item{y.tick.show}{Whether to display the y-axis tick labels}

\item{y.tick.suffix}{y-axis tick label suffix}

\item{y.tick.prefix}{y-axis tick label prefix}

\item{y.tick.decimals}{y-axis tick label decimal places}

\item{y.tick.format.manual}{Overrides tick.prefix, suffix and decimals;
See https://github.com/mbostock/d3/wiki/Formatting#numbers or
https://docs.python.org/release/3.1.3/library/string.html#formatspec}

\item{y.hovertext.decimals}{y-axis hover text decimal places}

\item{y.hovertext.format.manual}{Overrides hovertext decimals;
See https://github.com/mbostock/d3/wiki/Formatting#numbers or
https://docs.python.org/release/3.1.3/library/string.html#formatspec}

\item{y.tick.angle}{y-axis tick label angle in degrees.
90 = vertical; 0 = horizontal}

\item{y.tick.font.color}{y-axis tick label font color as a named color
in character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, maxColorValue = 255)).}

\item{y.tick.font.family}{Character; y-axis tick label font family}

\item{y.tick.font.size}{y-axis tick label font size}

\item{x.title}{Character, x-axis title; defaults to chart input values;
to turn off set to "FALSE".}

\item{x.title.font.color}{x-axis title font color as a named color in
character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, maxColorValue = 255)).}

\item{x.title.font.family}{Character; x-axis title font family}

\item{x.title.font.size}{x-axis title font size}

\item{x.line.width}{x-axis line in pixels, 0 = no line}

\item{x.line.color}{x-axis line color as a named color in character format
(e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, maxColorValue = 255)).}

\item{x.tick.marks}{Character; whether and where to show tick marks on the
x-axis.  Can be "outside", "inside", "none"}

\item{x.tick.mark.length}{Length of tick marks in pixels.}

\item{x.bounds.minimum}{Minimum of range for plotting;
NULL = no manual range set.  Must be less than x.bounds.maximum}

\item{x.bounds.maximum}{Maximum of range for
plotting; NULL = no manual range set.  Must be greater than x.bounds.minimum}

\item{x.tick.distance}{Tick mark distance in
x-axis units between minimum and maximum for plotting; NULL = no manual
range set.}

\item{x.zero.line.width}{Width in pixels of zero line; 0 = no zero line
shown}

\item{x.zero.line.color}{Color of horizontal zero (origo) line as a named
color in character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, maxColorValue = 255)).}

\item{x.position}{Character; set x-axis position; can be "top" or "bottom"}

\item{x.data.reversed}{Logical; whether to reverse x-axis or not}

\item{x.grid.width}{Width of y-grid lines in pixels; 0 = no line}

\item{x.grid.color}{Color of y-grid lines as a named color in character
format (e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, maxColorValue = 255)).}

\item{x.tick.show}{Whether to display the x-axis tick labels}

\item{x.tick.suffix}{x-axis tick label suffix}

\item{x.tick.prefix}{x-axis tick label prefix}

\item{x.tick.decimals}{x-axis tick label decimal places}

\item{x.tick.format.manual}{Overrides tick.prefix, suffix and decimals;
See https://github.com/mbostock/d3/wiki/Formatting#numbers or
https://docs.px.hon.org/release/3.1.3/librarx.string.html#formatspec}

\item{x.hovertext.decimals}{X.axis hover text decimal places}

\item{x.hovertext.format.manual}{Overrides hovertext decimals;
See https://github.com/mbostock/d3/wiki/Formatting#numbers or
https://docs.px.hon.org/release/3.1.3/librarx.string.html#formatspec}

\item{x.tick.angle}{x-axis tick label angle in degrees.
90 = vertical; 0 = horizontal}

\item{x.tick.font.color}{X-axis tick label font color as a named color in
character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, maxColorValue = 255)).}

\item{x.tick.font.family}{Character; x-axis tick label font family}

\item{x.tick.font.size}{x-axis tick label font size}

\item{x.tick.label.autoformat}{Logical; whether to rotate and wrap long x-axis labels.}

\item{series.marker.show}{Can be "none", "automatic" or a vector referencing
the plotly symbol dictionary using either numerics or strings.}

\item{series.marker.colors}{Character; a vector containing one or more named
colors from grDevices OR one or more specified hex value colors OR a single
named palette from grDevices, RColorBrewer, colorspace, or colorRamps.}

\item{series.marker.colors.reverse}{Logical; if the order of the colors should
be reversed.}

\item{series.marker.opacity}{Opacity for series markers as an alpha value (0 to 1).}

\item{series.marker.size}{Size in pixels of marker}

\item{series.marker.border.width}{Width in pixels of border/line
around series markers; 0 is no line}

\item{series.marker.border.colors}{Character; a vector containing one or more named
colors from grDevices OR one or more specified hex value colors OR a single
named palette from grDevices, RColorBrewer, colorspace, or colorRamps.}

\item{series.marker.border.colors.reverse}{Logical; if the order of the colors
should be reversed.}

\item{series.marker.border.opacity}{Opacity of border/line around
series markers as an alpha value (0 to 1).}

\item{series.line.width}{Thickness, in pixels, of the series line}

\item{series.line.colors}{Character; a vector containing one or more named
colors from grDevices OR one or more specified hex value colors OR a single
named palette from grDevices, RColorBrewer, colorspace, or colorRamps.}

\item{series.line.colors.reverse}{Logical; if the order of the colors
should be reversed.}

\item{series.line.opacity}{Opacity for series lines as an
alpha value (0 to 1)}

\item{tooltip.show}{Logical; whether to show a tooltip on hover.}

\item{modebar.show}{Logical; whether to show the zoom menu buttons or not.}

\item{global.font.family}{Character; font family for all occurrences of any
font attribute for the chart unless specified individually.}

\item{global.font.color}{Global font color as a named color in character format
(e.g. "black") or an rgb value (e.g. #' rgb(0, 0, 0, maxColorValue = 255)).}

\item{rows.to.ignore}{Character; comma separated string of row headings to
exclude from the charting.}

\item{cols.to.ignore}{Character; comma separated string of column headings to
exclude from the charting.  Does not apply to Labeled Scatterplot or Labeled
Bubbleplot, which both need to have the correct columns prior to charting.}

\item{bar.gap}{Chart proportion between each bar or column if using
bar or column charts, or between each cluster of bars or columns.}

\item{data.label.show}{Logical; whether to show data labels.}

\item{data.label.font.family}{Character; font family for data label.}

\item{data.label.font.size}{Font size for data label.}

\item{data.label.font.color}{Font color as a named color
in character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, maxColorValue = 255)).}

\item{data.label.decimals}{Number of decimal places to show in
data labels.}

\item{data.label.prefix}{Character; prefix for data values.}

\item{data.label.suffix}{Character; suffix for data values.}

\item{data.label.threshold}{The proportion of the total range below which
data labels should not be displayed. Only applicable for pie, bar and column
charts.}

\item{data.label.position}{Character; where to place the source data
value in relation to the marker icon.  Can be "top left", "top center", "top
right", "middle left", "middle center", "middle right", "bottom left",
"bottom center", "bottom right". Only applicable for line and area charts.}

\item{pie.order}{Character; "descending", "initial", or
"alphabetical".}

\item{pie.groups.order}{Character; "descending", "initial", or
"alphabetical".}

\item{pie.subslice.colors}{Character; a vector containing one or more named
colors from grDevices OR one or more specified hex value colors OR a single
named palette from grDevices, RColorBrewer, colorspace, or colorRamps.}

\item{pie.subslice.colors.reverse}{Logical; if the order of
pie.subslice.colors should be reversed.}

\item{pie.subslice.colors.repeat}{Logical; if, when a grouped
pie chart is displayed, the colors of the subslices should repeat
by group, or be different throughout; defaults to TRUE.}

\item{pie.border.color}{A single color for space around pie and between
segments.}

\item{pie.inner.radius}{The size of the inner radius of pie and
donut charts as a proportion out of 100. defaults to 70.}

\item{pie.show.percentages}{Whether to show percentages in pie and donut
charts instead of original values.}

\item{z.title}{Character; title of the bubble-size legend in labeled
bubbleplots.}

\item{scatter.group.indices}{Text of comma-separated group indices
corresponding to each row.}

\item{scatter.group.labels}{Text of comma-separated group labels.}

\item{us.date.format}{Whether to apply the US convention when parsing dates.}
}
\description{
\code{Chart} generates standard charts from plotly library.
}
\examples{
z <- c(5, 6, 2, 1.5, 9, 2.2)
Chart(y = z, type = "Area")
}

