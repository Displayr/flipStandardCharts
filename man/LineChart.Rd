% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linechart.R
\name{LineChart}
\alias{LineChart}
\title{Generates an interactive line chart based on the plotly library.}
\usage{
LineChart(y, x = NULL, transpose = FALSE, aggregate.period = "month",
  y.labels = NULL, x.labels = NULL, type = "Line", title = "",
  global.font.family = "Arial", global.font.color = rgb(44, 44, 44,
  maxColorValue = 255), global.font.size = 10, colors = qColors,
  transparency = 1, chart.fill.color = rgb(255, 255, 255, maxColorValue =
  255), chart.fill.transparency = 1, plot.fill.color = rgb(255, 255, 255,
  maxColorValue = 255), plot.fill.transparency = 1, legend.show = TRUE,
  legend.fill = rgb(255, 255, 255, maxColorValue = 255),
  legend.border.color = rgb(44, 44, 44, maxColorValue = 255),
  legend.border.line.width = 0, legend.font.color = rgb(44, 44, 44,
  maxColorValue = 255), legend.font.family = "Arial", legend.font.size = 12,
  legend.position = "right", legend.sort.order = "normal",
  margin.top = 80, margin.bottom = 80, margin.left = 80,
  margin.right = 80, margin.inner.pad = 0, y.title = "",
  y.title.font.color = rgb(44, 44, 44, maxColorValue = 255),
  y.title.font.family = "Arial", y.title.font.size = 16, y.line.width = 1,
  y.line.color = rgb(0, 0, 0, maxColorValue = 255), y.tick.marks = "",
  y.tick.length = 5, y.bounds.minimum = NULL, y.bounds.maximum = NULL,
  y.bounds.units.major = NULL, y.zero.line.width = 1,
  y.zero.line.color = rgb(44, 44, 44, maxColorValue = 255),
  y.position = "left", y.mirror = FALSE, y.grid.width = 1,
  y.grid.color = rgb(225, 225, 225, maxColorValue = 255), y.ticksuffix = "",
  y.tickprefix = "", y.tick.angle = 0, y.tick.format.manual = "",
  y.tick.format = c("", ""), y.tick.font.color = rgb(0, 0, 0, maxColorValue
  = 255), y.tick.font.family = "Arial", y.tick.font.size = 10,
  y.hover.format.manual = "", y.hover.format = c("", ""), x.title = "",
  x.title.font.color = rgb(44, 44, 44, maxColorValue = 255),
  x.title.font.family = "Arial", x.title.font.size = 16, x.line.width = 1,
  x.line.color = rgb(0, 0, 0, maxColorValue = 255), x.tick.marks = "",
  x.tick.length = 5, x.bounds.minimum = 0, x.bounds.maximum = 1,
  x.bounds.units.major = 0.2, x.zero.line.width = 1,
  x.zero.line.color = rgb(44, 44, 44, maxColorValue = 255),
  x.position = "bottom", x.mirror = FALSE, x.grid.width = 0,
  x.grid.color = rgb(225, 225, 225, maxColorValue = 255), x.ticksuffix = "",
  x.tickprefix = "", x.tick.angle = 0, x.tick.format.manual = "",
  x.tick.format = c("", ""), x.hover.format.manual = "",
  x.hover.format = c("", ""), x.tick.font.color = rgb(0, 0, 0, maxColorValue
  = 255), x.tick.font.family = "Arial", x.tick.font.size = 10,
  series.marker.show = "none", series.marker.color = qColors,
  series.marker.transparency = 1, series.marker.size = 6,
  series.marker.border.width = 1, series.marker.border.color = qColors,
  series.marker.border.transparency = 1, series.marker.text = FALSE,
  series.marker.text.font = "Arial", series.marker.text.color = rgb(191,
  191, 191, maxColorValue = 255), series.marker.text.size = 10,
  series.marker.text.position = "top middle", series.line.width = 1,
  series.line.color = qColors, series.line.transparency = 1,
  hover.mode = "closest", show.modebar = FALSE)
}
\arguments{
\item{y}{A vector, matrix, list of vectors, data frame, or table.}

\item{x}{A vector over which y will be aggregated. Must have the same
number of elements as y.}

\item{transpose}{Logical; should the final output be transposed?}

\item{aggregate.period}{Character; can be "month", "quarter", "year".
Only relevant when x is a vector of mode date.}

\item{y.labels}{Character vector, overrides chart matrix row names.}

\item{x.labels}{Character vector, overrides chart matrix column names.}

\item{type}{Character; type of chart. Can be "Line"}

\item{title}{Character; chart title.}

\item{global.font.family}{Character; global font family.  Can be "Arial
Black", "Arial", "Comic Sans MS", "Courier New", "Georgia", "Impact",
"Lucida Console", "Lucida Sans Unicode", "Marlett", "Symbol", "Tahoma",
"Times New Roman", "Trebuchet MS", "Verdana", "Webdings"}

\item{global.font.color}{Global font color as a named color in character
format (e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, max = 255)).}

\item{global.font.size}{Global font size; default = 10.}

\item{colors}{Vector of colors in RGB format.}

\item{transparency}{Transparency of area fill colors as an alpha value
(0 to 1).}

\item{chart.fill.color}{Chart (borders around plot) background color as
a named color in character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, max = 255)).}

\item{chart.fill.transparency}{Chart (borders around plot) background
transparency as an alpha value (0 to 1).}

\item{plot.fill.color}{Plot (the plot area proper) background color as
a named color in character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, max = 255)).}

\item{plot.fill.transparency}{Plot (the plot area proper) background
transparency as an alpha value (0 to 1).}

\item{legend.show}{Logical; show the legend.}

\item{legend.fill}{Legend fill color as a named color in character format
(e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, max = 255)).}

\item{legend.border.color}{Legend border color as a named color in character
format (e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, max = 255)).}

\item{legend.border.line.width}{Integer; width in pixels of the border
around the legend.  0 = no border.}

\item{legend.font.color}{Legend font color as a named color in character
format (e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, max = 255)).}

\item{legend.font.family}{Character; legend font family.}

\item{legend.font.size}{Integer; legend font size.}

\item{legend.position}{Where the legend will be placed; can be "left" or
"right" of plot.}

\item{legend.sort.order}{Character; can be "normal" or "reversed" (see
also grouping options, currently excluded from this function)}

\item{margin.top}{Integer; margin between plot area and the top of the
graphic in pixels}

\item{margin.bottom}{Integer; margin between plot area and the top of the
graphic in pixels}

\item{margin.left}{Integer; margin between plot area and the top of the
graphic in pixels}

\item{margin.right}{Integer; margin between plot area and the top of the
graphic in pixels}

\item{margin.inner.pad}{Integer; padding in pixels between plot proper
and axis lines}

\item{y.title}{Character, y-axis title}

\item{y.title.font.color}{Y-axis title font color as a named color in
character format (e.g. "black") or an rgb value (e.g. rgb(0, 0, 0,
max = 255)).}

\item{y.title.font.family}{Character; Y-axis title font family}

\item{y.title.font.size}{Integer; y-axis title font size}

\item{y.line.width}{Integer; y-axis line in pixels, 0 = no line}

\item{y.line.color}{Y-axis line color as a named color in character format
(e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, max = 255)).}

\item{y.tick.marks}{Character; whether and where to show tick marks on the
y axis.  Can be "outside", "inside", "none"}

\item{y.tick.length}{Integer; length of tick marks in pixels.}

\item{y.bounds.minimum}{Integer or NULL; set minimum of range for plotting;
NULL = no manual range set.  Must be less than y.bounds.maximum}

\item{y.bounds.maximum}{= Integer or NULL; set maximum of range for
plotting; NULL = no manual range set.  Must be greater than y.bounds.minimum}

\item{y.bounds.units.major}{Ingeger or NULL; set tick mark distance in
y-axis units between minimum and maximum for plotting; NULL = no manual
range set.}

\item{y.zero.line.width}{Width in pixels of zero line; 0 = no zero line
shown}

\item{y.zero.line.color}{Color of horizontal zero (origo) line as a named
color in character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, max = 255)).}

\item{y.position}{Character; set y-axis position; can be "left" or "right"}

\item{y.mirror}{Logical; mirror y-axis on other side?}

\item{y.grid.width}{Integer; width of y-grid lines in pixels; 0 = no line}

\item{y.grid.color}{Color of y-grid lines as a named color in character
format (e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, max = 255)).}

\item{y.ticksuffix}{Character; y-axis tick label suffix.}

\item{y.tickprefix}{Character; y-axis tick label prefix}

\item{y.tick.angle}{Integer, y-axis tick label angle in degrees.
90 = vertical; 0 = horizontal}

\item{y.tick.format.manual}{Character; specify the tick format manually
in accordance with \url{https://github.com/mbostock/d3/wiki/Formatting#numbers}
or \url{https://docs.python.org/release/3.1.3/library/string.html#formatspec}}

\item{y.tick.format}{A vector of two character strings where the first
one represents a prefix and the second represents the total number of
digits to show (including decimals).  E.g. c("n","3").  The formats can
be:  "n" (number), "\%", "$", "£".}

\item{y.tick.font.color}{Y-axis tick label font color as a named color
in character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, max = 255)).}

\item{y.tick.font.family}{Character; y-axis tick label font family}

\item{y.tick.font.size}{Integer; y-axis tick label font size}

\item{y.hover.format.manual}{Character; specify the hover format manually
in accordance with \url{https://github.com/mbostock/d3/wiki/Formatting#numbers}
or \url{https://docs.python.org/release/3.1.3/library/string.html#formatspec}}

\item{y.hover.format}{A vector of two character strings where the first
one represents a prefix and the second represents the total number of
digits to show (including decimals).  E.g. c("n","3").  The formats can be:
"n" (number), "\%", "$", "£".}

\item{x.title}{Character, x-axis title}

\item{x.title.font.color}{x-axis title font color as a named color in
character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, max = 255)).}

\item{x.title.font.family}{Character; x-axis title font family}

\item{x.title.font.size}{Integer; x-axis title font size}

\item{x.line.width}{Integer; x-axis line in pixels, 0 = no line}

\item{x.line.color}{X-axis line color as a named color in character format
(e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, max = 255)).}

\item{x.tick.marks}{Character; whether and where to show tick marks on the
y axis.  Can be "outside", "inside", "none"}

\item{x.tick.length}{Integer; length of tick marks in pixels.}

\item{x.bounds.minimum}{Integer or NULL; set minimum of range for plotting;
NULL = no manual range set.  Must be less than x.bounds.maximum}

\item{x.bounds.maximum}{= Integer or NULL; set maximum of range for
plotting; NULL = no manual range set.  Must be greater than x.bounds.minimum}

\item{x.bounds.units.major}{Ingeger or NULL; set tick mark distance in
x-axis units between minimum and maximum for plotting; NULL = no manual
range set.}

\item{x.zero.line.width}{Width in pixels of zero line; 0 = no zero line
shown}

\item{x.zero.line.color}{Color of horizontal zero (origo) line as a named
color in character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, max = 255)).}

\item{x.position}{Character; set x-axis position; can be "left" or "right"}

\item{x.mirror}{Logical; mirror x-axis on other side?}

\item{x.grid.width}{Integer; width of y-grid lines in pixels; 0 = no line}

\item{x.grid.color}{Color of y-grid lines as a named color in character
format (e.g. "black") or an rgb value (e.g. rgb(0, 0, 0, max = 255)).}

\item{x.ticksuffix}{Character; x-axis tick label suffix.}

\item{x.tickprefix}{Character; x-axis tick label prefix}

\item{x.tick.angle}{Integer, x-axis tick label angle in degrees.
90 = vertical; 0 = horizontal}

\item{x.tick.format.manual}{Character; specify the tick format manually
in accordance with \url{https://github.com/mbostock/d3/wiki/Formatting#numbers}
or \url{https://docs.python.org/release/3.1.3/library/string.html#formatspec}}

\item{x.tick.format}{A vector of two character strings where the first one
represents a prefix and the second represents the total number of digits to
show (including decimals).  E.g. c("n","3").  The formats can be:
"n" (number), "\%", "$", "£".}

\item{x.hover.format.manual}{Character; specify the hover format manually
in accordance with \url{https://github.com/mbostock/d3/wiki/Formatting#numbers}
or \url{https://docs.python.org/release/3.1.3/library/string.html#formatspec}}

\item{x.hover.format}{A vector of two character strings where the first
one represents a prefix and the second represents the total number of
digits to show (including decimals).  E.g. c("n","3").  The formats can be:
"n" (number), "\%", "$", "£".}

\item{x.tick.font.color}{X-axis tick label font color as a named color in
character format (e.g. "black") or an rgb value (e.g.
rgb(0, 0, 0, max = 255)).}

\item{x.tick.font.family}{Character; x-axis tick label font family}

\item{x.tick.font.size}{Integer; x-axis tick label font size}

\item{series.marker.show}{Can be "none", "automatic" or a vector referencing
the plotly symbol dictionary using either numerics or strings.}

\item{series.marker.color}{Vector of colors in RGB format to use for the
markers}

\item{series.marker.transparency}{Integer; transparency for series markers
as an alpha value (0 to 1)}

\item{series.marker.size}{Integer; size in pixels of marker}

\item{series.marker.border.width}{Integer; width in pixels of border/line
around series markers; 0 is no line}

\item{series.marker.border.color}{Vector of colors in RGB format for
border/line around series markers}

\item{series.marker.border.transparency}{Integer; transparency of
border/line around series markers as an alpha value (0 to 1)}

\item{series.marker.text}{Logical; show data point text with or as series
marker.}

\item{series.marker.text.font}{Character; font of series marker text data
point.}

\item{series.marker.text.color}{Color of series marker text data
point as a named color in character format (e.g. "black") or an rgb value
(e.g. rgb(0, 0, 0, max = 255)).}

\item{series.marker.text.size}{Integer; series marker text data font size}

\item{series.marker.text.position}{Character; first word can be "top",
"middle", or "bottom".  Second word can be "left", "middle", or "right".}

\item{series.line.width}{Integer; thickness, in pixels, of the series line}

\item{series.line.color}{Vector of colors in RGB format for series the lines}

\item{series.line.transparency}{Integer; transparency for series lines as an
alpha value (0 to 1)}

\item{hover.mode}{Character or logic; can be FALSE for no hover text, "x" to
show all x-values for the hover point, "y" to show all y-values for the
hover point, or "closest" to show the single, nearest, value.}

\item{show.modebar}{Logical; whether to show the zoom menu buttons or not.}
}
\description{
\code{LineChart} generates an line chart.
}
\examples{
data("y.data")
data("x.data")
LineChart(y.data, x.data)
}

