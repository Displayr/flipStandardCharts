{
    "collab_server" : "",
    "contents" : "## Create list of annotations if data.label > 0\ndataLabelAnnotation <- function(chart.matrix,\n                                bar.offset = 0,\n                                bar.family = \"Arial\",\n                                bar.size = 10,\n                                bar.color = \"black\",\n                                bar.decimals = 0,\n                                barmode = \"\",\n                                bar.data.label.as.percent = FALSE\n                        )\n{\nseries.count <- nrow(chart.matrix)\nx.items <- 0:(ncol(chart.matrix) - 1)\nspacing <- 1 / series.count\nseries.positions <- NULL\n\nif (length(bar.color) < series.count)\n    bar.color <- rep(bar.color, series.count)\n\nif (series.count%%2 == 0)\n    series.count <- series.count / 2\nelse\n    series.count <- trunc(series.count / 2, 0)\n\nfor (i in 1:series.count)\n{\n    series.positions <- c(series.positions, i * spacing, -1 * (i * spacing))\n}\nseries.positions <- sort(c(series.positions, 0))\n\ndata.annotations <- list()\n\nif (barmode == \"stack\")\n{\n    series.positions <- rep(0, length(series.positions))\n\n    # Y positions become the stacked values, however, which is different from the data values.\n    ypositions <- cum.data(chart.matrix, \"cumulative.sum\")\n\n    # Modify to become the middle of the range\n    ypositions.half <- chart.matrix / 2\n\n    ypositions.sum <- rbind(rep(0,ncol(ypositions)), ypositions)\n    ypositions.sum <- ypositions.sum[1:nrow(ypositions.sum) - 1, ]\n    ypositions.sum <- ypositions.sum + ypositions.half\n}\n\n## Are column headers to be treated as numbers?\ncolumn.names <- colnames(chart.matrix)\ncheck.coercion <- tryCatch(as.numeric(column.names), error = function(e) e, warning = function(w) w)\nif (is(check.coercion, \"warning\"))\n    column.character <- TRUE\nelse\n    column.character <- FALSE\n\nif (barmode == \"stack\")\n    loop.by <- 1:length(x.items)\nelse\n    loop.by <- x.items\n\nfor (a in loop.by)\n{\n    if (column.character == FALSE)\n        add.factor <- as.numeric(column.names[a])\n    else\n        add.factor <- a\n\n    x.offsets <- series.positions + add.factor\n\n    for (b in 1:length(x.offsets))\n    {\n        if (barmode == \"stack\")\n            data.point <- chart.matrix[b, a]\n        else\n            data.point <- chart.matrix[b, a + 1]\n\n        if (data.point < 0 && barmode != \"stack\")\n            ypos <- data.point + bar.offset\n        else if (data.point >= 0 && barmode != \"stack\")\n            ypos <- data.point - bar.offset\n        else\n            ypos <- ypositions.sum[b, a]\n\n        # if (is.na(x.offsets[b]))\n        #     break\n\n        # Data label as percent formatting\n        if (bar.data.label.as.percent)\n            text = paste(round((data.point * 100), bar.decimals), \"%\", sep = \"\")\n        else\n            text = round(data.point, bar.decimals)\n\n        data.annotations[[length(data.annotations) + 1]] <- list(x = x.offsets[b],\n                                                                 y = ypos,\n                                                                 text = text,\n                                                                 font = list(\n                                                                     family = bar.family,\n                                                                     size = bar.size,\n                                                                     color = plotly::toRGB(bar.color[b], 1)\n                                                                 ),\n                                                                 showarrow = FALSE)\n    }\n}\n\ndata.annotations\n}\n",
    "created" : 1463970335481.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3657664179",
    "id" : "226BCE41",
    "lastKnownWriteTime" : 1463987038,
    "last_content_update" : 1463987038782,
    "path" : "~/GitHub/flipStandardCharts/R/dataLabelAnnotation.R",
    "project_path" : "R/dataLabelAnnotation.R",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}