{
    "collab_server" : "",
    "contents" : "### Reproduce column charts from Excel using plotly\nrequire(plotly)\n\n## Basic style\na.matrix <- rbind(c(0.2,0.3,0.3,0.5,0.3,0.6,0.4,0.8,0.2,0.5,0.1,0.3),c(0.3,0.5,0.1,0.3,0.1,0.2,0.1,0.4,0.1,0.2,0.1,0.4))\nrownames(a.matrix) <- c(\"Series1\",\"Series2\")\ncolnames(a.matrix) <- c(\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\")\n\nmyCols <- c(rgb(0,176,240, max=255), rgb(197,90,17, max=255))\nmyLineCols <- c(rgb(31,78,121, max=255), rgb(244, 177, 131, max=255))\n\np <- plot_ly()\n\np <- config(displayModeBar = FALSE)\n\np <- add_trace(p,\n               name = \"Series 1\",\n               type = \"bar\",\n\n               x = c(\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"),\n               y = c(0.2,0.3,0.3,0.5,0.3,0.6,0.4,0.8,0.2,0.5,0.1,0.3),\n               marker = list(\n                   color = plotly::toRGB(myLineCols[1])\n               ),\n               orientation = \"v\")\n\np <- add_trace(p,\n               name = \"Series 2\",\n               type = \"bar\",\n               x = c(\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"),\n               y = c(0.3,0.5,0.1,0.3,0.1,0.2,0.1,0.4,0.1,0.2,0.1,0.4),\n               marker = list(\n                   color = plotly::toRGB(myLineCols[2])\n               ),\n               orientation = \"v\")\n\np <-  layout(title = \"Column chart - BASIC STYLE\",\n             yaxis = list(\n                 linewidth = 1,\n                 linecolor = toRGB(rgb(141, 159, 183, max = 255), alpha = 1),\n                 ticks = \"none\",\n                 tickformat = \"%\",\n                 tickmode = \"array\",\n                 tickvals = c(0, .10, .20, .30, .40, .50, .60, .70, .80, .90, 1.00),\n                 ticktext = c(\"0%\",\"10%\",\"20%\",\"30%\",\"40%\",\"50%\",\"60%\",\"70%\",\"80%\",\"90%\",\"100%\"),\n                 range = list(0,1),\n                 showgrid = TRUE\n             ),\n             xaxis = list(\n                 showgrid = FALSE,\n                 linewidth = 1,\n                 linecolor = toRGB(rgb(225, 225, 225, max = 255), alpha = 1),\n                 tickcolor = toRGB(rgb(225, 225, 225, max = 255), alpha = 1),\n                 ticks = \"outside\"\n             ))\n\np\n\n\n## Junk chart\njunk.data <- as.matrix(rbind(c(-32, 58, 35, -12, 35, -16, 79),\n             c(64, -23, 10, -8, 43, 78, 30),\n             c(22, 64, 48, 10, -7, 22, 4)))\ncolnames(junk.data) <- c(\"29-Dec\",\"30-Dec\",\"31-Dec\",\"01-Jan\",\"02-Jan\",\"03-Jan\",\"04-Jan\")\nrownames(junk.data) <- c(\"Blue\", \"Yellow\", \"Red\")\n\n\nmyLineCols <- c(rgb(68, 112, 236, max=255), rgb(255, 192, 0, max=255), rgb(210, 0, 0, max=255))\n\n\np2 <- plot_ly()\n\np2 <- config(displayModeBar = FALSE)\n\np2 <- add_trace(p2,\n               name = \"Blue\",\n               type = \"bar\",\n               x = c(\"29-Dec\",\"30-Dec\",\"31-Dec\",\"01-Jan\",\"02-Jan\",\"03-Jan\",\"04-Jan\"),\n               y = c(-32, 58, 35, -12, 35, -16, 79),\n               marker = list(\n                   color = plotly::toRGB(myLineCols[1], 0),\n                   line = list(\n                       width = 3,\n                       color = plotly::toRGB(myLineCols[1], 1)\n                   )\n               ),\n               orientation = \"v\")\n\np2 <- add_trace(p2,\n               name = \"Yellow\",\n               type = \"bar\",\n               x = c(\"29-Dec\",\"30-Dec\",\"31-Dec\",\"01-Jan\",\"02-Jan\",\"03-Jan\",\"04-Jan\"),\n               y = c(64, -23, 10, -8, 43, 78, 30),\n               marker = list(\n                   color = plotly::toRGB(myLineCols[2], 0),\n                   line = list(\n                       width = 3,\n                       color = plotly::toRGB(myLineCols[2], 1)\n                   )\n               ),\n               orientation = \"v\")\n\np2 <- add_trace(p2,\n               name = \"Red\",\n               type = \"bar\",\n               x = c(\"29-Dec\",\"30-Dec\",\"31-Dec\",\"01-Jan\",\"02-Jan\",\"03-Jan\",\"04-Jan\"),\n               y = c(22, 64, 48, 10, -7, 22, 4),\n               text = c(\"$22\", \"$64\", \"$48\", \"$10\", \"-$7\", \"$22\", \"$4\"),\n               marker = list(\n                   color = plotly::toRGB(myLineCols[3], 0),\n                   line = list(\n                       width = 3,\n                       color = plotly::toRGB(myLineCols[3], 1)\n                   )\n               ),\n               orientation = \"v\")\n\np2 <- layout(p2,\n            font = list(\n                color = plotly::toRGB(rgb(192, 0, 0, max = 255))\n            ),\n            title = \"<b>Sample Chart</b>\",\n            legend = list(\n                font = list(\n                    color = plotly::toRGB(rgb(192, 192, 192, max = 255)),\n                    size = 14\n                )\n            ),\n            plot_bgcolor = plotly::toRGB(rgb(64, 64, 64, max = 255)),\n            paper_bgcolor = plotly::toRGB(rgb(64, 64, 64, max = 255)),\n            bargap = 0,\n            bargroupgap = 0.15,\n            yaxis = list(\n                gridcolor = plotly::toRGB(rgb(104, 104, 104, max = 255)),\n                tickfont = list(\n                    color = plotly::toRGB(rgb(192, 192, 192, max = 255))\n                ),\n                range = list(-41, 81),\n                tickformat = \"$\"\n            ),\n            xaxis = list(\n                tickfont = list(\n                    color = plotly::toRGB(rgb(192, 192, 192, max = 255))\n                )\n            ),\n            hovermode = \"closest\")\n\np2\n",
    "created" : 1463469456920.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1219612124",
    "id" : "968C59A0",
    "lastKnownWriteTime" : 1463535336,
    "last_content_update" : 1463535336485,
    "path" : "C:/R/columnChart_experiment.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}