{
    "collab_server" : "",
    "contents" : "context(\"AsChartMatrix\")\n#  rm(list=ls())\n\nx.data = c(\"A\",\"B\",\"B\",\"C\",\"C\")\ny.data = c(0, 0, 0, 0, 0)\nvar1 <- c(1,2,3,4,5)\nvar2 <- c(5,4,3,2,1)\nvar3 <- c(3,3,3,3,3)\nalpha.five <- LETTERS[1:5]\n\n##### GOOD CASES ######\ntest_that(\"A named vector becomes a ChartMatrix\", {\n    X = c(\"A\" = 1, \"B\" = 2, \"C\" = 3)\n    my.chart.matrix <- AsChartMatrix(X)\n    expect_true(IsChartMatrix(my.chart.matrix, 1, 3))\n})\n\ntest_that(\"A single column table becomes a chart matrix\", {\n    Y <- table(x.data, y.data)\n    colnames(Y) <- \"Series 1\"\n\n    my.chart.matrix <- AsChartMatrix(Y)\n    expect_true(IsChartMatrix(my.chart.matrix, 3, 1))\n})\n\ntest_that(\"A numeric matrix with one column becomes a chart matrix\", {\n    Y <- matrix(1:3, ncol = 1, dimnames = list(x = LETTERS[1:3], series = \"Series 1\"))\n\n    my.chart.matrix <- AsChartMatrix(Y)\n    expect_true(IsChartMatrix(my.chart.matrix, 3, 1))\n})\n\ntest_that(\"A table with one row becomes a chart matrix\", {\n    Y <- table(y.data, x.data)\n    rownames(Y) <- \"Series 1\"\n\n    my.chart.matrix <- AsChartMatrix(Y)\n    expect_true(IsChartMatrix(my.chart.matrix, 1, 3))\n})\n\ntest_that(\"One numeric or integer vector and one character vector become a chart matrix\", {\n    my.chart.matrix <- AsChartMatrix(y.data, x.data)\n    expect_true(IsChartMatrix(my.chart.matrix, 1, 3))\n})\n\ntest_that(\"One numeric or integer vector and one factor vector become a chart matrix\", {\n    my.chart.matrix <- AsChartMatrix(y.data, factor(x.data))\n    expect_true(IsChartMatrix(my.chart.matrix, 1, 3))\n})\n\ntest_that(\"One numeric or integer vector and one ordered factor vector become a chart matrix\", {\n    my.chart.matrix <- AsChartMatrix(y.data, as.ordered(x.data))\n    expect_true(IsChartMatrix(my.chart.matrix, 1, 3))\n})\n\ntest_that(\"One or more numeric or integer vector(s) in a list and one character vector become a chart matrix\", {\n    Y <- list(A = var1, B = var2, C = var3)\n    X <- alpha.five\n\n    my.chart.matrix <- AsChartMatrix(Y, alpha.five)\n    expect_true(IsChartMatrix(my.chart.matrix, 3, 5))\n})\n\ntest_that(\"One or more numeric or integer vector(s) in a data frame and one character vector become a chart matrix\", {\n    Y <- cbind(var1, var2, var3)\n    X <- alpha.five\n\n    my.chart.matrix <- AsChartMatrix(Y, alpha.five)\n    expect_true(IsChartMatrix(my.chart.matrix, 3, 5))\n})\n\n# Factor variables\ntest_that(\"One or more numeric or integer vector(s) in a data frame and one character vector become a chart matrix\", {\n    X <- as.factor(c(\"A\",\"B\",\"A\",\"B\",\"C\",\"C\"))\n    Y <- as.factor(c(\"A\",\"B\",\"A\",\"B\",\"C\",\"C\"))\n\n    my.chart.matrix <- AsChartMatrix(Y, X)\n    expect_true(IsChartMatrix(my.chart.matrix, 3, 3))\n})\n\n##### BAD CASES ######\n\n## Regardless of X input, Y bad cases are:\n## Unnamed numeric vector\nY <- c(1, 2, 3, 4, 5)\n\n## Unnamed logic vector\nlogic.vector <- c(TRUE, FALSE, TRUE, TRUE, FALSE)\nY <- c(TRUE, FALSE, TRUE, TRUE, FALSE)\n\n## Named logic vector\nY <- c(A = TRUE, B = FALSE, C = TRUE, D = TRUE, E = FALSE)\n\n## List of logic vectors\nY <- list(logic.vector, logic.vector, logic.vector)\n\n## Data frame of logic vectors\nY <- data.frame(cbind(logic.vector, logic.vector, logic.vector))\n\n## List of named vectors\nnamed.vector.a <- c(\"A\" = 1, \"B\" = 2, \"C\" = 3)\nnamed.vector.b <- c(\"D\" = 3, \"E\" = 2, \"F\" = 1)\nY <- list(named.vector.a, named.vector.b)\n\n## Data frame of named vectors\nY <- data.frame(cbind(named.vector.a, named.vector.b))\n\n## Mixed mode list - character and integer\nvar4 <- c(\"A\", \"B\", \"C\", \"D\", \"C\")\nY <- list(var1, var2, var3, var4)\n\n## Mixed mode data frame - character and integer\nY <- cbind(var1, var2, var3, var4)\n\n## List of factors\nfactor.a <- factor(x.data)\nfactor.b <- factor(y.data)\nY <- list(factor.a, factor.b)\n\n## Data frame of factors\nY <- data.frame(factor.a, factor.b)\n\n## Mixed mode list - integer and factor\nY <- list(factor.a, y.data)\n\n## Mixed mode list - character and factor\nY <- list(factor.a, var4)\n\n## Mixed mode data frame - integer and factor\nY <- data.frame(cbind(factor.a, y.data))\n\n## Mixed mode data frame - character and factor\nY <- data.frame(cbind(factor.a, var4))\n\n## Character matrix\nY <- matrix(LETTERS[1:3])\n\n## Logic matrix\nY <- matrix(rep(c(TRUE,FALSE),3))\n\n## Raw data consisting of one character vector\nY <- LETTERS[1:5]\n\n## Raw data consisting of multiple character vectors passed as a list\nY <- list(LETTERS[1:5], LETTERS[6:10], LETTERS[11:15])\n\n## Raw data consisting of multiple character vectors passed as a data frame\nY <- data.frame(cbind(LETTERS[1:5], LETTERS[6:10], LETTERS[11:15]))\n\n## Regardless of Y input, X bad cases are:\n## X as a logic vector *********************** Would not make much sense as an area or line chart (but could be used in column or bar charts?)\nX <- logic.vector\n\n## X as a data frame, regardless of composition\nX <- data.frame(cbind(var1, var2, var3))\n\n## X as a list, regardless of composition\nX <- list(var1, var2, var3)\n\n\n",
    "created" : 1461283096531.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3551125218",
    "id" : "520C74E5",
    "lastKnownWriteTime" : 1461310436,
    "last_content_update" : 1461311076460,
    "path" : "~/GitHub/flipStandardCharts/tests/testthat/test-aschartmatrix.R",
    "project_path" : "tests/testthat/test-aschartmatrix.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}